#include <bits/stdc++.h>

using namespace std;

class Grammar {
public:
    map<char, vector<string> > rules;

    Grammar()
    {
        rules['S'] = {"aA"};
        rules['A'] = {"bS", "aB"};
        rules['B'] = {"bC"};
        rules['C'] = {"aA", "b"};
    }

    string generateString()
    {
        string result = "S";
        while (true)
        {
            bool replaced = false;
            for (int i = 0; i < result.size(); i++)
            {
                if (rules.count(result[i]))
                {
                    string replacement = rules[result[i]][rand() % rules[result[i]].size()];
                    result = result.substr(0, i) + replacement + result.substr(i + 1);
                    replaced = true;
                    break;
                }
            }
            if (!replaced) break;
        }
        return result;
    }

    void generateFiveStrings()
    {
        srand(time(0));
        for (int i = 0; i < 5; i++)
        {
            cout << generateString() << endl;
        }
    }
};

int main()
{
    Grammar grammar;
    grammar.generateFiveStrings();
    return 0;
}
